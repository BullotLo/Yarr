# TBB
function(YARR_ADD_TBB)
    if (TARGET tbb_2019)
        return()
    endif()

    # Architecture
    if ("${TARGET_ARCH}" STREQUAL "arm")
        set(TBB_ARCH "arch=arm")
    else()
        if ("${TARGET_ARCH}" STREQUAL "arm64")
            set(TBB_ARCH "arch=arm64")
        else()
            set(TBB_ARCH "")
        endif()
    endif()
    if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
        set(TBB_COMP compiler=clang)
    else()
        set(TBB_COMP CXX=${CMAKE_CXX_COMPILER})
    endif()

    ExternalProject_Add (
        tbb_2019
        GIT_REPOSITORY https://github.com/intel/tbb.git
        GIT_TAG 2019_U8
        UPDATE_COMMAND ""
        INSTALL_COMMAND ${PROJECT_SOURCE_DIR}/scripts/install_tbb.sh ${CMAKE_CURRENT_BINARY_DIR}  ${CMAKE_CURRENT_BINARY_DIR}
        BUILD_COMMAND cd ${CMAKE_CURRENT_BINARY_DIR}/external/src/tbb_2019 &&  make -j4 ${TBB_COMP} ${TBB_ARCH} extra_inc=big_iron.inc
        CONFIGURE_COMMAND ""
        PREFIX "${CMAKE_CURRENT_BINARY_DIR}/external"
        )
    link_directories(${CMAKE_CURRENT_BINARY_DIR}/lib)
    include_directories(${CMAKE_CURRENT_BINARY_DIR}/external/src/tbb_2019/include)
endfunction()

function(YARR_ADD_NETIO)
    if (TARGET netio4)
        return()
    endif()

    # NetIO
    ExternalProject_Add (
        netio4
        GIT_REPOSITORY https://:@gitlab.cern.ch:8443/wittgen/netio.git
        GIT_TAG felix-4.0.x
        UPDATE_COMMAND ""
        PATCH_COMMAND cp ${PROJECT_SOURCE_DIR}/cmake/CMakeLists.txt.netio ${CMAKE_CURRENT_BINARY_DIR}/external/src/netio4/CMakeLists.txt
        INSTALL_COMMAND ""
        PREFIX "${CMAKE_CURRENT_BINARY_DIR}/external"
        CMAKE_ARGS "${TOOLCHAIN}"
        DEPENDS tbb_2019
        )

    include_directories(${CMAKE_CURRENT_BINARY_DIR}/external/src/netio4)
    link_directories(${CMAKE_CURRENT_BINARY_DIR}/external/src/netio4-build)
endfunction()

function(YARR_ADD_FELIX)
    if (TARGET felixbase4)
        return()
    endif()

    # FELIX
    ExternalProject_Add (
        felixbase4
        GIT_REPOSITORY https://:@gitlab.cern.ch:8443/wittgen/felixbase.git
        GIT_TAG felix-4.0.x
        UPDATE_COMMAND ""
        PATCH_COMMAND ""
        INSTALL_COMMAND ""
        CONFIGURE_COMMAND ""
        BUILD_COMMAND ""
        PREFIX "${CMAKE_CURRENT_BINARY_DIR}/external"
        DEPENDS netio4
        )

    include_directories(${CMAKE_CURRENT_BINARY_DIR}/external/src/felixbase4)
endfunction()

function(YARR_ADD_ROGUE)
    if (TARGET rogue)
        return()
    endif()

    # Rogue
    ExternalProject_Add (
        rogue
        GIT_REPOSITORY https://github.com/slaclab/rogue.git
        GIT_TAG v3.6.0
        UPDATE_COMMAND ""
        INSTALL_COMMAND make install
        PREFIX "${CMAKE_CURRENT_BINARY_DIR}/external"
        CMAKE_ARGS "-DNO_PYTHON=1" "-DNO_ZMQ=1" "-DNO_BZIP=1" "-DSTATIC_LIB=1" "${TOOLCHAIN}"
        DEPENDS tbb_2019
        )

    link_directories(${CMAKE_CURRENT_BINARY_DIR}/external/src/rogue/lib)
    include_directories(${CMAKE_CURRENT_BINARY_DIR}/external/src/rogue/include)
endfunction()

function(YARR_ADD_VARIANT)
    if (TARGET variant)
        return()
    endif()

    # Variant
    ExternalProject_Add (
        variant
        GIT_REPOSITORY  https://gitlab.cern.ch/wittgen/variant.git
        GIT_TAG v1.4.0
        UPDATE_COMMAND ""
        INSTALL_COMMAND ""
        BUILD_COMMAND ""
        CONFIGURE_COMMAND ""	
        PREFIX "${CMAKE_CURRENT_BINARY_DIR}/external"
        )
    link_directories(${CMAKE_CURRENT_BINARY_DIR}/external/src/variant)
    include_directories(${CMAKE_CURRENT_BINARY_DIR}/external/src/variant/include)
endfunction()
