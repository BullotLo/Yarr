job_build_and_test:
    image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7
    stage: build
    script:
      - yum -y install centos-release-scl-rh devtoolset-7 make gnuplot cmake3 git zeromq-devel
      - scl enable devtoolset-7 bash
      - source /opt/rh/devtoolset-7/enable
      - mkdir  build
      - cd build
      - cmake3 .. -DCMAKE_TOOLCHAIN_FILE=../cmake/linux-gcc
      - make install -j4
      - export USER=test
      - echo $USER
      - /bin/pwd
      - mkdir /tmp/test
      - ls /tmp/
      - cd ../
      - x86_64/bin/scanConsole -r configs/controller/emuCfg.json -c configs/connectivity/example_fei4b_setup.json -s configs/scans/fei4/std_digitalscan.json -p
      - ls
      - ls ./data/
      - ls ./data/000001_std_digitalscan/
      - cat ./data/000001_std_digitalscan/*_OccupancyMap.dat
      - NUM100=`cat ./data/000001_std_digitalscan/*_OccupancyMap.dat | grep -o 100 | wc -l`
      - if [ "$NUM100" != "26880" ]; then exit 2; fi
      - x86_64/bin/scanConsole -k

job_build_clang:
    image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7
    stage: build
    script:
      - yum -y install centos-release-scl-rh llvm-toolset-7-clang make cmake3 gnuplot git zeromq-devel
      - scl enable   llvm-toolset-7  bash
      - source /opt/rh/llvm-toolset-7/enable
      - mkdir -p build
      - cd build 
      - cmake3 .. -DCMAKE_TOOLCHAIN_FILE=../cmake/linux-clang
      - make install -j4
      - cd ..
      - x86_64/bin/scanConsole -k

job_test_json:
    image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7
    stage: build
    script:
      - yum -y install npm
      - npm install jsonlint -g
      - for file in $(find ../configs/ -iname "*.json"); do echo ${file}; jsonlint -q ${file} || break -1; done



